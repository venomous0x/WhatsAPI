<?php
require_once 'func.php';

if ( !function_exists( 'hex2bin' ) ) {
    function hex2bin( $str ) {
        $sbin = "";
        $len = strlen( $str );
        for ( $i = 0; $i < $len; $i += 2 ) {
            $sbin .= pack( "H*", substr( $str, $i, 2 ) );
        }

        return $sbin;
    }
}

function generateRequestToken($country, $phone) {
	$waString = "53160F52030A44C28310C282C29AC28DC28C463A2169295741";
	$noMediaHash = "0001A9339CEF0E7172AEC99E99F0044DCC3F90F58C45C0A85BDEAB054DA9A61B4438258D5614A9F105FA";
	$waPrefix = "636F6D2E7768617473617070";
	$signature
	$classesMd5 = "2f8c600d1b5d497aee2adf672abb87b7";
	$k = "3E44F029266A51F014C91D2B3D0F21609D3036C410DDD5B5FB74829F24D721F100C714BBE45C240DFE3BC0DBFF73CA4FDE9D065CA47A38E426872111C31EF87F0D51612535D08E2BD60C815436D1278D2989D8CCE351B5235A0D";
	$KEY = "The piano has been drinking";


	//TODO: This phone prefix split XXX-ZZZZZ... is ok for +34 numbers, but needs to be checked
	//      for other countries
	$phone1 = substr($phone, 0, 3);
	$phone2 = substr($phone, 3);

	// This AES secret is not really needed right now
	$id = hex2bin($waString) . $country . $phone2;
	$salt = substr(hex2bin($noMediaHash),2,4);
	$key = pbkdf2('sha1', $id, $salt, 16, 16, true);
	$iv = substr(hex2bin($noMediaHash),6,16);
	$data = substr(hex2bin($noMediaHash),22);
	$td = mcrypt_module_open(MCRYPT_RIJNDAEL_128, '', 'nofb', '');
	mcrypt_generic_init($td, $key, $iv);
	$aes_secret = mcrypt_generic($td, $data);
	mcrypt_module_close($td);


	// We xor this file because I don't want to have a copyrighted png 
	// on my repository
	$f =  file_get_contents("magic.dat");
	$count = 0;
	for ($i=0; $i < strlen($f); $i++) {
        	$f[$i] = $f[$i] ^ $KEY[$count++];
        	if ($count == strlen($KEY) -1) {
                	$count = 0;
        	}
	}

	$d = hex2bin($waPrefix) . $f;
	$key2 = pbkdf2('sha1', $d, hex2bin($k), 128, 80, true);

	$data = hex2bin($signature . $classesMd5) . $phone1 . $phone2;

	$opad = str_repeat(chr(0x5C), 64);
	$ipad = str_repeat(chr(0x36), 64);
	for ($i = 0; $i < 64; $i++) {
		$opad[$i] = $opad[$i] ^ $key2[$i];
		$ipad[$i] = $ipad[$i] ^ $key2[$i];
	}

	$pack = 'H'.strlen(hash("sha1", 'lalala'));

	$output = hash("sha1", $opad.pack($pack, hash("sha1", $ipad.$data)));

	return base64_encode(hex2bin($output));
}
